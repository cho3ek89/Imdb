name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      version: 1.0.0.0
    strategy:
      matrix:
        runtime: [linuxmint.18.3-x64, win10-x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.8.0
        with:
          dotnet-version: '5.0.x'

      - name: Setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '16.x'

      - name: Build Imdb
        run: dotnet publish 'Imdb/Imdb.csproj' -o 'binaries/Imdb' -c 'Release' -r '${{ matrix.runtime }}' -v 'normal' --self-contained true -p:PublishTrimmed=true -p:TrimMode=Link -p:Version=${{ env.version }}

      - name: Build Imdb.Loader
        run: dotnet publish 'Imdb.Loader/Imdb.Loader.csproj' -o 'binaries/Imdb.Loader' -c 'Release' -r '${{ matrix.runtime }}' -v 'normal' --self-contained true -p:PublishTrimmed=true -p:TrimMode=Link -p:Version=${{ env.version }}

      - name: Build Imdb.WebApp
        run: |
          cd Imdb.WebApp
          npm ci
          npm run build -- --prod --output-path '../binaries/Imdb/wwwroot'
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v2.2.3
        with:
          name: Imdb.Loader_${{ matrix.runtime }}_${{ env.version }}
          path: binaries/
