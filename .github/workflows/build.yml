name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      version: 1.0.0.0
    strategy:
      matrix:
        runtime: [linux-x64, win10-x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2.0.0
        with:
          dotnet-version: '6.0.x'

      - name: Setup Node.js
        uses: actions/setup-node@v3.1.1
        with:
          node-version: '18.x'

      - name: Build Imdb
        run: dotnet publish 'Imdb/Imdb.csproj' -o 'binaries/Imdb' -c 'Release' -r '${{ matrix.runtime }}' -v 'normal' --self-contained true -p:PublishReadyToRun=true -p:PublishTrimmed=false -p:TrimMode=Link -p:Version=${{ env.version }}

      - name: Build Imdb.Loader
        run: dotnet publish 'Imdb.Loader/Imdb.Loader.csproj' -o 'binaries/Imdb.Loader' -c 'Release' -r '${{ matrix.runtime }}' -v 'normal' --self-contained true -p:PublishReadyToRun=true -p:PublishTrimmed=false -p:TrimMode=Link -p:Version=${{ env.version }}

      - name: Build Imdb.WebApp
        run: |
          cd Imdb.WebApp
          npm ci
          npm run build -- --configuration production --output-path '../binaries/Imdb/wwwroot'
          cd ..

      - name: Update settings
        run: |
          # Updating database and logging setting of Imdb.Loader project.
          cd binaries/Imdb
          cat appsettings.json | \
          jq '.ConnectionStrings.ImDb = "Data Source=../Databases/imdb.db3;"' | \
          jq '.Serilog.MinimumLevel.Default = "Information"' | \
          jq '(.Serilog.WriteTo[] | select(.Name == "File") | .Args.path) |= "../Logs/Imdb.txt"' \
          > temp.json && mv temp.json appsettings.json

          # Updating database and logging setting of Imdb project.
          cd ../Imdb.Loader
          cat appsettings.json | \
          jq '.DatabaseSettings.ConnectionString = "Data Source=../Databases/imdb.db3;"' | \
          jq '.Serilog.MinimumLevel.Default = "Information"' | \
          jq '(.Serilog.WriteTo[] | select(.Name == "File") | .Args.path) |= "../Logs/Imdb.Loader.txt"' \
          > temp.json && mv temp.json appsettings.json
          cd ../..

      - name: Upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Imdb_${{ matrix.runtime }}_${{ env.version }}
          path: binaries/
